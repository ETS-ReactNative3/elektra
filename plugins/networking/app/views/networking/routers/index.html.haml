=render partial: 'networking/shared/tabs', locals: { tab: 'routers' }

- if current_user.is_allowed?("networking:router_create", tenant_id: @scoped_project_id)
  .toolbar
    .main-buttons
      = link_to 'Create new', plugin('networking').new_router_path, data: {modal: true}, class: 'btn btn-primary'


%table.table
  %thead
    %tr
      %th Name
      %th Project
      %th External Network
      %th External Subnet
      %th Private Network
      %th Status
      %th.snug
  %tbody
    - if @routers.length==0
      %tr
        %td{colspa: 5} No routers available.
    - else
      - @routers.each do | router |
        - network_id = router.try(:external_gateway_info).fetch('network_id',nil)
        - external_subnets = router.try(:external_gateway_info).fetch('external_fixed_ips',[])

        %tr{id: "router_#{router.id}", class: "#{'foreign-object' if foreign_router?(router)}"}
          %td
            = link_to router.name, plugin('networking').router_path(router.id), data: {modal: true}
            %br
            %span.info-text= router.id
          %td
            = cached_object(router.tenant_id, type: 'project')
            -# %br
            -# %span.info-text= foreign_router?(router) ? 'foreign router' : 'owned by this project'
          %td= cached_object(network_id, { type: 'network',
            url: network_id ? plugin('networking').networks_external_path(network_id) : false})
          %td
            - external_subnets.each do |subnet|
              = subnet['ip_address']
              \/
              %span.info-text
                = cached_object(subnet['subnet_id'], type: 'subnet') do |s|
                  = s['name']
          %td
            - router_internal_networks(router).each do |net|
              = link_to net.name, plugin('networking').networks_private_path(net.id), data: {modal: true}
              %br
              %span.info-text= net.id

          %td= router.status
          %td.snug
            = render partial: 'item_actions', locals: {router:router, show_view:false}